{"ast":null,"code":"import ShopActionTypes from \"./shop.types\";\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collecitionRef = firestore.collection(\"collections\");\n    dispatch(fetchCollectionsStart());\n    collecitionRef.get().then(snapshot => {\n      const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionMap);\n      this.setState({\n        loading: false\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/leon/Workspace/crown-clothing/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsStartAsync","dispatch","collecitionRef","collection","get","then","snapshot","collectionMap","updateCollections","setState","loading"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AAC1CC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADoB,CAAP,CAA9B;AAIP,OAAO,MAAMC,0BAA0B,GAAG,MAAM;AAC9C,SAAQC,QAAD,IAAc;AACnB,UAAMC,cAAc,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAvB;AACAF,IAAAA,QAAQ,CAACJ,qBAAqB,EAAtB,CAAR;AACAK,IAAAA,cAAc,CAACE,GAAf,GAAqBC,IAArB,CAA2BC,QAAD,IAAc;AACtC,YAAMC,aAAa,GAAGX,+BAA+B,CAACU,QAAD,CAArD;AACAE,MAAAA,iBAAiB,CAACD,aAAD,CAAjB;AACA,WAAKE,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KAJD;AAKD,GARD;AASD,CAVM","sourcesContent":["import ShopActionTypes from \"./shop.types\";\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\n\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START,\n});\n\nexport const fetchCollectionsStartAsync = () => {\n  return (dispatch) => {\n    const collecitionRef = firestore.collection(\"collections\");\n    dispatch(fetchCollectionsStart())\n    collecitionRef.get().then((snapshot) => {\n      const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionMap);\n      this.setState({ loading: false });\n    });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}