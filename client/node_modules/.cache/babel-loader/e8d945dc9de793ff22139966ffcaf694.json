{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport logger from 'redux-logger';\nimport { persistStore } from 'redux-persist';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './root-saga';\nimport rootReducer from './root-reducer';\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, composeEnhancer(applyMiddleware(...middlewares)));\nconst persistor = persistStore(store);\nsagaMiddleware.run(rootSaga);\nexport { store, persistor };","map":{"version":3,"sources":["/Users/leon/Workspace/crown-clothing/client/src/redux/store.js"],"names":["createStore","applyMiddleware","compose","logger","persistStore","createSagaMiddleware","rootSaga","rootReducer","sagaMiddleware","middlewares","process","env","NODE_ENV","push","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","persistor","run"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,EAAsCC,OAAtC,QAAoD,OAApD;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,aAArB;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,MAAMC,cAAc,GAAGH,oBAAoB,EAA3C;AACA,MAAMI,WAAW,GAAG,CAACD,cAAD,CAApB;;AACA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AACxCH,EAAAA,WAAW,CAACI,IAAZ,CAAiBV,MAAjB;AACH;;AACD,MAAMW,eAAe,GAAGC,MAAM,CAACC,oCAAP,IAA+Cd,OAAvE;AACA,MAAMe,KAAK,GAAGjB,WAAW,CAACO,WAAD,EAAcO,eAAe,CAACb,eAAe,CAAC,GAAGQ,WAAJ,CAAhB,CAA7B,CAAzB;AACA,MAAMS,SAAS,GAAGd,YAAY,CAACa,KAAD,CAA9B;AACAT,cAAc,CAACW,GAAf,CAAmBb,QAAnB;AAEA,SAASW,KAAT,EAAgBC,SAAhB","sourcesContent":["import {createStore, applyMiddleware, compose} from 'redux';\nimport logger from 'redux-logger';\nimport { persistStore } from 'redux-persist';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './root-saga';\n\nimport rootReducer from './root-reducer';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\nif (process.env.NODE_ENV === 'development') {\n    middlewares.push(logger);\n}\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, composeEnhancer(applyMiddleware(...middlewares)));\nconst persistor = persistStore(store);\nsagaMiddleware.run(rootSaga)\n\nexport { store, persistor };"]},"metadata":{},"sourceType":"module"}