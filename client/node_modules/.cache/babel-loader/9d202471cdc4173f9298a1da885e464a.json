{"ast":null,"code":"import { takeEvery } from \"redux-saga/effects\";\nimport ShopActionTypes from \"./shop.types\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"im fired\");\n  const collecitionRef = firestore.collection(\"collections\");\n  dispatch(fetchCollectionsStart());\n  collecitionRef.get().then(snapshot => {\n    const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n    dispatch(fetchCollectionsSuccess(collectionMap));\n  }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/leon/Workspace/crown-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsAsync","console","log","collecitionRef","collection","dispatch","fetchCollectionsStart","get","then","snapshot","collectionMap","fetchCollectionsSuccess","catch","error","fetchCollectionsFailure","message","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMC,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAN;AAEA,QAAMC,cAAc,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAvB;AACAC,EAAAA,QAAQ,CAACC,qBAAqB,EAAtB,CAAR;AACAH,EAAAA,cAAc,CACXI,GADH,GAEGC,IAFH,CAESC,QAAD,IAAc;AAClB,UAAMC,aAAa,GAAGX,+BAA+B,CAACU,QAAD,CAArD;AACAJ,IAAAA,QAAQ,CAACM,uBAAuB,CAACD,aAAD,CAAxB,CAAR;AACD,GALH,EAMGE,KANH,CAMUC,KAAD,IAAWR,QAAQ,CAACS,uBAAuB,CAACD,KAAK,CAACE,OAAP,CAAxB,CAN5B;AAOD;AAED,OAAO,UAAUT,qBAAV,GAAkC;AACvC,QAAMV,SAAS,CACbC,eAAe,CAACmB,uBADH,EAEbhB,qBAFa,CAAf;AAID","sourcesContent":["import { takeEvery } from \"redux-saga/effects\";\nimport ShopActionTypes from \"./shop.types\";\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from \"../../firebase/firebase.utils\";\n\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"im fired\");\n\n  const collecitionRef = firestore.collection(\"collections\");\n  dispatch(fetchCollectionsStart());\n  collecitionRef\n    .get()\n    .then((snapshot) => {\n      const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionMap));\n    })\n    .catch((error) => dispatch(fetchCollectionsFailure(error.message)));\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeEvery(\n    ShopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionsAsync\n  );\n}\n"]},"metadata":{},"sourceType":"module"}