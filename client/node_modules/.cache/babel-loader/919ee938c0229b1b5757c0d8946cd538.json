{"ast":null,"code":"export const addItemToCart = (cartItems, cartItemToAdd) => {\n  const isExist = cartItems.find(item => item.id === cartItemToAdd.id);\n\n  if (isExist) {\n    return cartItems.map(item => item.id === cartItemToAdd.id ? { ...item,\n      quantity: item.quantity + 1\n    } : item);\n  }\n\n  return [...cartItems, { ...cartItemToAdd,\n    quantity: 1\n  }];\n};\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\n  const existingCartItem = cartItems.find(item => item.id === cartItemToRemove.id);\n\n  if (existingCartItem.quantity === 1) {\n    cartItems.filter(item => item.id !== cartItemToRemove.id);\n  }\n\n  quantity: cartItemToRemove.quantity - 1;\n};","map":{"version":3,"sources":["/Users/leon/Workspace/crown-clothing/src/redux/cart/cart.utils.js"],"names":["addItemToCart","cartItems","cartItemToAdd","isExist","find","item","id","map","quantity","removeItemFromCart","cartItemToRemove","existingCartItem","filter"],"mappings":"AACA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,aAAZ,KAA8B;AACvD,QAAMC,OAAO,GAAGF,SAAS,CAACG,IAAV,CAAeC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYJ,aAAa,CAACI,EAAjD,CAAhB;;AAEA,MAAIH,OAAJ,EAAa;AACT,WAAOF,SAAS,CAACM,GAAV,CAAcF,IAAI,IACrBA,IAAI,CAACC,EAAL,KAAYJ,aAAa,CAACI,EAA1B,GACM,EAAE,GAAGD,IAAL;AAAWG,MAAAA,QAAQ,EAAEH,IAAI,CAACG,QAAL,GAAgB;AAArC,KADN,GACiDH,IAF9C,CAAP;AAIH;;AAED,SAAO,CAAC,GAAGJ,SAAJ,EAAe,EAAE,GAAGC,aAAL;AAAoBM,IAAAA,QAAQ,EAAE;AAA9B,GAAf,CAAP;AACH,CAXM;AAaP,OAAO,MAAMC,kBAAkB,GAAG,CAACR,SAAD,EAAYS,gBAAZ,KAAiC;AAC/D,QAAMC,gBAAgB,GAAGV,SAAS,CAACG,IAAV,CAAeC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYI,gBAAgB,CAACJ,EAApD,CAAzB;;AAEA,MAAIK,gBAAgB,CAACH,QAAjB,KAA8B,CAAlC,EAAqC;AACjCP,IAAAA,SAAS,CAACW,MAAV,CAAmBP,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYI,gBAAgB,CAACJ,EAAzD;AACH;;AACDE,EAAAA,QAAQ,EAAGE,gBAAgB,CAACF,QAAjB,GAA4B,CAA5B;AAGd,CATM","sourcesContent":["\nexport const addItemToCart = (cartItems, cartItemToAdd) => {\n    const isExist = cartItems.find(item => item.id === cartItemToAdd.id);\n\n    if (isExist) {\n        return cartItems.map(item =>\n            item.id === cartItemToAdd.id\n                ? { ...item, quantity: item.quantity + 1 } : item\n        );\n    }\n\n    return [...cartItems, { ...cartItemToAdd, quantity: 1 }]\n}\n\nexport const removeItemFromCart = (cartItems, cartItemToRemove) => {\n    const existingCartItem = cartItems.find(item => item.id === cartItemToRemove.id);\n\n    if (existingCartItem.quantity === 1) {\n        cartItems.filter( (item) => item.id !== cartItemToRemove.id)\n    }\n    quantity : cartItemToRemove.quantity - 1\n\n\n}"]},"metadata":{},"sourceType":"module"}