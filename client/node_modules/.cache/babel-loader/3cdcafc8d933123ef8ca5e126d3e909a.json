{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyA_GlwyEvU4ZVvXsei907zupQDGr_Y5z58\",\n  authDomain: \"crown-clothing-db-c5450.firebaseapp.com\",\n  databaseURL: \"https://crown-clothing-db-c5450.firebaseio.com\",\n  projectId: \"crown-clothing-db-c5450\",\n  storageBucket: \"crown-clothing-db-c5450.appspot.com\",\n  messagingSenderId: \"562105299398\",\n  appId: \"1:562105299398:web:e4aee941ef4cfdda9ac2c7\",\n  measurementId: \"G-ZKVHJ5DXKJ\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapshot = await userRef.get();\n\n  if (!snapshot.exists) {\n    const {\n      email,\n      displayName\n    } = userAuth;\n    const createAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => {\n  auth.signInWithPopup(provider);\n};\nexport default firebase;","map":{"version":3,"sources":["/Users/leon/Workspace/crown-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapshot","get","exists","email","displayName","createAt","Date","set","error","console","log","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,yCAFD;AAGXC,EAAAA,WAAW,EAAE,gDAHF;AAIXC,EAAAA,SAAS,EAAE,yBAJA;AAKXC,EAAAA,aAAa,EAAE,qCALJ;AAMXC,EAAAA,iBAAiB,EAAE,cANR;AAOXC,EAAAA,KAAK,EAAE,2CAPI;AAQXC,EAAAA,aAAa,EAAE;AARJ,CAAf;AAWA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AACzE,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AACA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AAClB,UAAM;AAACC,MAAAA,KAAD;AAAQC,MAAAA;AAAR,QAAuBV,QAA7B;AACA,UAAMW,QAAQ,GAAG,IAAIC,IAAJ,EAAjB;;AAEA,QAAI;AACA,YAAMV,OAAO,CAACW,GAAR,CAAY;AACdH,QAAAA,WADc;AAEdD,QAAAA,KAFc;AAGdE,QAAAA,QAHc;AAId,WAAGV;AAJW,OAAZ,CAAN;AAMH,KAPD,CAOE,OAAOa,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AACH;AACJ;AACJ,CApBM;AAsBP5B,QAAQ,CAAC6B,aAAT,CAAuB5B,MAAvB;AAEA,OAAO,MAAM6B,IAAI,GAAG9B,QAAQ,CAAC8B,IAAT,EAAb;AACP,OAAO,MAAMhB,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAEP,MAAMiB,QAAQ,GAAG,IAAI/B,QAAQ,CAAC8B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAE;AAAT,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAM;AAACL,EAAAA,IAAI,CAACM,eAAL,CAAqBL,QAArB;AAA+B,CAA/D;AAEP,eAAe/B,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n    apiKey: \"AIzaSyA_GlwyEvU4ZVvXsei907zupQDGr_Y5z58\",\n    authDomain: \"crown-clothing-db-c5450.firebaseapp.com\",\n    databaseURL: \"https://crown-clothing-db-c5450.firebaseio.com\",\n    projectId: \"crown-clothing-db-c5450\",\n    storageBucket: \"crown-clothing-db-c5450.appspot.com\",\n    messagingSenderId: \"562105299398\",\n    appId: \"1:562105299398:web:e4aee941ef4cfdda9ac2c7\",\n    measurementId: \"G-ZKVHJ5DXKJ\"\n}\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n    if (!userAuth) return;\n\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\n    const snapshot = await userRef.get();\n    if (!snapshot.exists) {\n        const {email, displayName} = userAuth;\n        const createAt = new Date();\n\n        try {\n            await userRef.set({\n                displayName,\n                email,\n                createAt,\n                ...additionalData\n            });\n        } catch (error) {\n            console.log('error creating user', error.message);\n        }\n    }\n}\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({prompt: 'select_account'});\nexport const signInWithGoogle = () => {auth.signInWithPopup(provider)};\n\nexport default firebase;"]},"metadata":{},"sourceType":"module"}