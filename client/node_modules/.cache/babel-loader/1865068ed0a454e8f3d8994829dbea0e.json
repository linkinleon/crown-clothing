{"ast":null,"code":"import ShopActionTypes from \"./shop.types\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionMap\n});\nexport const fetchCollectionsFailure = () => ({});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collecitionRef = firestore.collection(\"collections\");\n    dispatch(fetchCollectionsStart());\n    collecitionRef.get().then(snapshot => {\n      const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionMap));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/leon/Workspace/crown-clothing/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","FETCH_COLLECTIONS_SUCCESS","payload","collectionMap","fetchCollectionsFailure","fetchCollectionsStartAsync","dispatch","collecitionRef","collection","get","then","snapshot"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AAC1CC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADoB,CAAP,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAG,OAAO;AAC5CF,EAAAA,IAAI,EAAEJ,eAAe,CAACO,yBADsB;AAE5CC,EAAAA,OAAO,EAAEC;AAFmC,CAAP,CAAhC;AAKP,OAAO,MAAMC,uBAAuB,GAAG,OAAO,EAAP,CAAhC;AAIP,OAAO,MAAMC,0BAA0B,GAAG,MAAM;AAC9C,SAAQC,QAAD,IAAc;AACnB,UAAMC,cAAc,GAAGZ,SAAS,CAACa,UAAV,CAAqB,aAArB,CAAvB;AACAF,IAAAA,QAAQ,CAACT,qBAAqB,EAAtB,CAAR;AACAU,IAAAA,cAAc,CAACE,GAAf,GAAqBC,IAArB,CAA2BC,QAAD,IAAc;AACtC,YAAMR,aAAa,GAAGP,+BAA+B,CAACe,QAAD,CAArD;AACAL,MAAAA,QAAQ,CAACN,uBAAuB,CAACG,aAAD,CAAxB,CAAR;AACD,KAHD;AAID,GAPD;AAQD,CATM","sourcesContent":["import ShopActionTypes from \"./shop.types\";\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from \"../../firebase/firebase.utils\";\n\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START,\n});\n\nexport const fetchCollectionsSuccess = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionMap,\n});\n\nexport const fetchCollectionsFailure = () => ({\n\n})\n\nexport const fetchCollectionsStartAsync = () => {\n  return (dispatch) => {\n    const collecitionRef = firestore.collection(\"collections\");\n    dispatch(fetchCollectionsStart());\n    collecitionRef.get().then((snapshot) => {\n      const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionMap));\n    });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}