{"ast":null,"code":"import { takeEvery, call } from \"redux-saga/effects\";\nimport ShopActionTypes from \"./shop.types\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"im fired\");\n\n  try {\n    const collecitionRef = firestore.collection(\"collections\");\n    const snapshot = yield collecitionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(collectionsMap));\n  } //   dispatch(fetchCollectionsStart());\n  //   collecitionRef\n  //     .get()\n  //     .then((snapshot) => {\n  //       const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n  //       dispatch(fetchCollectionsSuccess(collectionMap));\n  //     })\n  //     .catch((error) => dispatch(fetchCollectionsFailure(error.message)));\n\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/leon/Workspace/crown-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsAsync","console","log","collecitionRef","collection","snapshot","get","collectionsMap","put","error","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,QAAgC,oBAAhC;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,SAAQC,uBAAR,EAAiCC,uBAAjC,QAA+D,gBAA/D;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMC,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAN;;AAEA,MAAI;AACF,UAAMC,cAAc,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAvB;AACA,UAAMC,QAAQ,GAAG,MAAMF,cAAc,CAACG,GAAf,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMb,IAAI,CAACG,+BAAD,EAAkCQ,QAAlC,CAAjC;AACA,UAAMG,GAAG,CAACV,uBAAuB,CAACS,cAAD,CAAxB,CAAT;AACD,GALD,CAKE,OAAOE,KAAP,EAAc;AACd,UAAMD,GAAG,CAACT,uBAAuB,CAACQ,cAAD,CAAxB,CAAT;AACD,GAVsC,CAYzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACC;AAED,OAAO,UAAUG,qBAAV,GAAkC;AACvC,QAAMjB,SAAS,CACbE,eAAe,CAACgB,uBADH,EAEbX,qBAFa,CAAf;AAID","sourcesContent":["import { takeEvery, call } from \"redux-saga/effects\";\nimport ShopActionTypes from \"./shop.types\";\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from \"../../firebase/firebase.utils\";\n\nimport {fetchCollectionsSuccess, fetchCollectionsFailure} from './shop.actions';\n\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"im fired\");\n\n  try {\n    const collecitionRef = firestore.collection(\"collections\");\n    const snapshot = yield collecitionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap))\n  } catch (error) {\n    yield put(fetchCollectionsFailure(collectionsMap))\n  }\n  \n//   dispatch(fetchCollectionsStart());\n//   collecitionRef\n//     .get()\n//     .then((snapshot) => {\n//       const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n//       dispatch(fetchCollectionsSuccess(collectionMap));\n//     })\n//     .catch((error) => dispatch(fetchCollectionsFailure(error.message)));\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeEvery(\n    ShopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionsAsync\n  );\n}\n"]},"metadata":{},"sourceType":"module"}